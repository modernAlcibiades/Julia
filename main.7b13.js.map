{"version":3,"sources":["webpack:///./src/config.js","webpack:///./src/sketches/sketch-julia.js","webpack:///./src/components/App/AppStateProvider/init-state.js","webpack:///./src/components/App/AppStateProvider/reducer.js","webpack:///./src/components/App/AppStateProvider/index.jsx","webpack:///./src/components/P5Wrapper/index.jsx","webpack:///./src/components/JuliaDisplay/index.jsx","webpack:///./src/components/About/index.jsx","webpack:///./src/components/Navbar/NavbarElements.js","webpack:///./src/components/ConnectWallet/index.jsx","webpack:///./src/components/Navbar/index.jsx","webpack:///./src/components/Dashboard/index.jsx","webpack:///./src/components/AppContent/index.jsx","webpack:///./src/components/App/index.jsx","webpack:///./src/index.jsx"],"names":["module","exports","apikey","s","hp","thresh","maxitr","xmin","xmax","ymin","ymax","r","theta","c1","c2","c3","c4","state","dispatch","ms","ss","vs","minval","maxval","vals","iterate_julia","a","b","i","fa","gcd","setup","dim","Math","floor","window","innerWidth","innerHeight","createCanvas","draw","refresh","hash","length","val","parseInt","substring","push","map","PI","cos","sin","k","m","resetImage","pixelDensity","loadPixels","width","j","height","pix","grad","cols","pixels","updatePixels","type","payload","key","value","canvas","address","undefined","provider","balance","ns_client","NFTStorage","token","metadata","contract_address","contract","minted","FTMSCAN_API_KEY","bgndColor","errorMessage","successMessage","AppDispatchContext","createContext","AppStateContext","initState","AppStateProvider","children","useReducer","reducer","Provider","propTypes","PropTypes","any","isRequired","P5Wrapper","id","generate","sketch","console","log","sketchContainer","useRef","useEffect","p5","current","remove","ref","className","object","func","defaultProps","memo","_","nextProps","p5Wrapper","JuliaDisplay","useContext","blobd","redraw","_hash","random","toString","cnt","ethers","Contract","Julia","abi","current_supply","mint","onClick","toBlob","blob","store","name","seed","description","image","url","data","href","token_uri","connect","getSigner","mintOne","utils","parseEther","txn","wait","receipt","events","message","e2","sketchJulia","About","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","ConnectWallet","useState","buttonText","setButtonText","ethereum","clear_connect","toggle_connect","networkVersion","providers","Web3Provider","request","method","signer_address","on","newAddress","chainId","Navbar","to","activeStyle","AppContent","path","exact","component","prefix","Dashboard","render","document","querySelector"],"mappings":"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","file":"main.7b13.js","sourcesContent":["module.exports = {\n    apikey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGM5NUU2MmZEMzgyZjUwN0VhRUM3OURDNkU4MzRGODM3RjM0NDJEMTgiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzMjc1ODc4NzYwNywibmFtZSI6IkZhbnRvbUdlbmVyYXRpdmVBcnQifQ.9PVwHw6GZ3cTYtnANqnD3P4X9F9tcKIJk2KbnUwEuw8\"\n}","export default function (s) {\n    s.state = {}\n    s.dispatch = () => { }\n\n    // Variables\n    let hp;\n    let thresh, maxitr;\n    let xmin, xmax, ymin, ymax;\n    let r, theta, c1, c2, c3, c4;\n    let vals = [-1.2, 1.2, -1.2, 1.2];\n    let ms, ss, vs;\n    let minval, maxval;\n\n    // functions\n    let iterate_julia = (a, b)=> {\n        let i = 0;\n        while (i < maxitr) {\n            const fa = a * a - b * b + c1;\n            b = 2 * a * b + c2;\n            a = fa;\n            i += 1;\n            if (a * a + b * b > thresh) {\n                return i;\n            }\n            i++;\n        }\n    }\n\n    let gcd = (a, b) => {\n        if (a <= 1 || b <= 1) {\n            return 1;\n        } else if (a % b == 0) {\n            return b;\n        } else return gcd(b, a % b);\n    }\n\n    let resetImage = () => {\n        const { hash } = s.state;\n        hp = [];\n        for (let i = 2; i < hash.length; i = i + 2) {\n            const val = parseInt('0x' + hash.substring(i, i + 2));\n            hp.push(val);\n        }\n        // Indices of parameters\n        // 0 : r\n        // 1 : theta\n        r = 0.7855 + s.map(hp[0], 0, 256, -0.1, + 0.1);\n        theta = s.map(hp[2], 0, 256, 0, 2*s.PI);\n        c1 = r * s.cos(theta);\n        c2 = r * s.sin(theta);\n\n        // 2, 3, 4 : Control options to select algorithm\n        maxitr = 3 * hp[4] + 8;\n        thresh = hp[2] * hp[3] + 3;\n        /*\n        thresh = pow(1.44, threshslider.value());\n        maxitr = maxitrslider.value();\n        c1 = -0.75;\n        c2 = 0.11;*/\n\n        // 5, 6 : Select x, y ranges\n        xmin = vals[0] - s.map(hp[5], 0, 256, 0, 0.5);\n        xmax = vals[1] + s.map(hp[5], 0, 256, 0, 0.5);\n        ymin = vals[2] - s.map(hp[6], 0, 256, 0, 0.5);\n        ymax = vals[3] + s.map(hp[6], 0, 256, 0, 0.5);\n\n        // 7, 8 : Underlying mandelbrot\n        // 9 : Modulus for color selection\n        // 10, 11, 12 : r, g, b\n        // 13, 14, 15 : color scale\n\n        // mr = hp[10] / gcd(hp[9], hp[10]);\n        // mg = hp[11] / gcd(hp[9], hp[11]);\n        // mb = hp[12] / gcd(hp[9], hp[12]);\n        ms = [];\n        ss = [];\n        vs = [];\n        for (let k = 0; k < 3; k++) {\n            const m = gcd(hp[9], hp[10 + k]);\n            ms.push(m == 1 ? hp[9] : m);\n            ss.push(m == 1 ? hp[13 + k] % 2 : m % 2);\n            vs.push(s.map(hp[13 + k], 0, 256, 0, 1));\n        }\n\n        // Other constants\n        minval = 255;\n        maxval = 0;\n    };\n\n    s.setup = () => {\n        const dim = Math.floor((window.innerWidth > window.innerHeight ? window.innerHeight : window.innerWidth) * 0.8);\n\n        s.createCanvas(dim, dim);\n        hp = [];\n    }\n\n    s.draw = () => {\n        if (s.state.refresh) {\n            resetImage();\n            s.pixelDensity(1);\n            s.loadPixels();\n            // use hp3 for a mapping\n\n            for (let i = 0; i < s.width; i++) {\n                for (let j = 0; j < s.height; j++) {\n                    let pix = (i + j * s.width) * 4;\n                    c3 = s.map(i, 0, s.height, xmin, xmax);\n                    c4 = s.map(j, 0, s.width, ymin, ymax);\n                    let grad = iterate_julia(c3, c4);\n                    let val = s.map(grad, 0, maxitr, 0, 256);\n                    // Calculate Julia\n                    let cols = (maxitr - grad) * (i * i + j * j);\n                    for (let k = 0; k < 3; k++) {\n                        s.pixels[pix + k] = vs[k] * val + s.map((ss[k] * cols) % ms[k], 0, ms[k], 0, 255);\n                        if (s.pixels[pix + k] > maxval) maxval = s.pixels[pix + k];\n                        if (s.pixels[pix + k] < minval) minval = s.pixels[pix + k];\n                    }\n                    s.pixels[pix + 3] = 255;\n                }\n            }\n            // Normalize\n            for (let i = 0; i < s.width; i++) {\n                for (let j = 0; j < s.height; j++) {\n                    let pix = (i + j * s.width) * 4;\n                    for (let k = 0; k < 3; k++) {\n                        s.pixels[pix + k] = s.map(s.pixels[pix + k], minval, maxval, 0, 255);\n                    }\n                }\n            }\n\n            s.updatePixels();\n            s.dispatch(\n                {\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'refresh',\n                        value: false,\n                    },\n                }\n            );\n            s.dispatch(\n                {\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'blobd',\n                        value: s.canvas,\n                    },\n                }\n            );\n        }\n        \n    }\n}\n","import { NFTStorage } from 'nft.storage';\nimport { apikey } from \"../../../config.js\";\nexport default {\n    // wallet\n    address: undefined,\n    provider: undefined,\n    balance: 0,\n\n    // ipfs\n    ns_client: new NFTStorage({ token: apikey}),\n    canvas: undefined,\n    metadata: undefined,\n    \n    // contract\n    contract_address: \"0xc45c766C9D0639654590F16486C936b97eCd714D\",\n    contract: undefined,\n    minted: '--',\n    FTMSCAN_API_KEY: undefined,\n    \n    // Generator\n    refresh: true,\n    hash: '0x8c4a76cf4a66c6ab0d6ce34a49a6a482',\n    bgndColor: '#ddd',\n    // playAudio: false,\n    errorMessage: \"\",\n    successMessage: \"\"\n}\n","export default function (state, { type, payload }) {\n    switch (type) {\n        \n        case 'SET_VALUE':\n            return {\n                ...state,\n                [payload.key]: payload.value,\n            }\n        case 'SET_ERROR':\n            return {\n                ...state,\n                'errorMessage': payload.value,\n                'successMessage': \"\"\n\n            }\n        case 'SET_SUCCESS':\n            return {\n                ...state,\n                \"successMessage\": payload.value,\n                \"errorMessage\": \"\"\n            }\n        \n        default:\n            return state\n    }\n}\n","import React, { createContext, useReducer } from 'react'\nimport PropTypes from 'prop-types'\n\nimport initState from './init-state'\nimport reducer from './reducer'\n\nexport const AppDispatchContext = createContext(() => { })\nexport const AppStateContext = createContext(initState)\n\nfunction AppStateProvider({ children }) {\n    const [state, dispatch] = useReducer(reducer, initState)\n\n    return (\n        <AppDispatchContext.Provider value={dispatch}>\n            <AppStateContext.Provider value={state}>\n                {children}\n            </AppStateContext.Provider>\n        </AppDispatchContext.Provider>\n    )\n}\n\nAppStateProvider.propTypes = {\n    children: PropTypes.any.isRequired,\n}\n\nexport default AppStateProvider\n","import React, { memo, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { generate } from 'shortid'\n\nexport default function (id = generate()) {\n    let canvas = null\n\n    function P5Wrapper({\n        sketch = () => { },\n        state = { },\n        dispatch = () => { },\n    }) {\n        console.log(`::: P5Wrapper(${id}) component has been re-rendered`)\n\n        const sketchContainer = useRef(null)\n\n        useEffect(() => {\n            console.log(`::: P5Wrapper(${id})/useEffect()`)\n            canvas = new window.p5(sketch, sketchContainer.current)\n            canvas.state = state\n            canvas.dispatch = dispatch\n\n            dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'blobd',\n                        value: canvas.canvas,\n                    },\n                });\n\n            return () => {\n                console.log(`::: P5Wrapper(${id})/useEffect.return()`)\n                canvas.remove()\n            }\n        }, [dispatch, sketch, state])\n\n        return (\n            <div ref={sketchContainer} className=\"p5wrapper\">\n                \n            </div>\n        )\n        //<h5>{`P5Wrapper #${id}`}</h5>\n    }\n\n    P5Wrapper.propTypes = {\n        state: PropTypes.object,\n\n        dispatch: PropTypes.func,\n        sketch: PropTypes.func,\n    }\n\n    P5Wrapper.defaultProps = {\n        state: {},\n\n        dispatch: () => { },\n        sketch: () => { },\n    }\n\n    return memo(P5Wrapper, (_, nextProps) => {\n        canvas.state = { ...nextProps.state }\n\n        return true\n    })\n}\n","import React, { useContext, useEffect } from 'react'\n\nimport { generate } from 'shortid';\n\nimport sketchJulia from '../../sketches/sketch-julia';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider';\nimport p5Wrapper from '../P5Wrapper';\n\n// contract\nimport Julia from '../contracts/FractalArt.sol/Julia.json';\nimport { ethers } from 'ethers';\n\nconst P5Wrapper = p5Wrapper(generate())\n\nconst JuliaDisplay =()=> {\n    const dispatch = useContext(AppDispatchContext)\n    const {\n        contract,\n        contract_address,\n        address,\n        provider,\n        ns_client,\n        blobd,\n        refresh,\n        hash,\n        errorMessage,\n        successMessage,\n        minted\n    } = useContext(AppStateContext)\n\n    const redraw = () => {\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'refresh',\n                value: true,\n            },\n        });\n        let _hash = '0x';\n        for (let i = 0; i < 32; i++) {\n            const val = Math.floor(Math.random() * 16);\n            _hash = _hash + val.toString(16);\n        }\n        console.log(\"Seed\", _hash);\n        \n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'hash',\n                value: _hash,\n            },\n        });\n    }\n\n    useEffect(() => {\n        // Clear Canvas\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'blobd',\n                value: undefined,\n            },\n        });\n\n        // Redraw on canvas\n        redraw();\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n            console.log(\"Provider\", provider);\n            // Initialize contract\n            if (provider !== undefined) {\n                const cnt = new ethers.Contract(\n                    contract_address,\n                    Julia.abi,\n                    provider);\n            \n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'contract',\n                        value: cnt,\n                    },\n                });\n        \n                const mint = parseInt(await cnt.current_supply());\n                console.log(\"Minted\", mint);\n\n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'minted',\n                        value: mint,\n                    },\n                });\n            } else {\n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'contract',\n                        value: undefined,\n                    },\n                });\n            }\n        })();\n    }, [provider]);\n\n    return (\n        <div className=\"mint-wrapper\">\n            <div className=\"inputs-wrapper\">\n                <button\n                    className=\"btn btn-warning\"\n                    type=\"button\"\n                    onClick={() => {\n                        redraw();\n                    } }>\n                    Generate New\n                </button>\n                <span></span>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={async () => {\n                        if (provider === undefined || address === undefined ) {\n                            dispatch(\n                                {\n                                    type: 'SET_ERROR',\n                                    payload: {\n                                        value: \"Please connect your wallet before minting\",\n                                    },\n                                });\n                            return;\n                        }\n\n                        const bl = await blobd.toBlob(async function (blob) {// get content as blob\n                            dispatch(\n                                {\n                                    type: 'SET_SUCCESS',\n                                    payload: {\n                                        value: `Minting. Please wait...`,\n                                    },\n                                });\n                            let metadata;\n                            try {\n                                metadata = await ns_client.store({\n                                    name: `Julia`,\n                                    seed: `${hash}`,\n                                    description: `julia_${hash}`,\n                                    image: blob\n                                });\n                                dispatch(\n                                    {\n                                        type: 'SET_VALUE',\n                                        payload: {\n                                            key: 'metadata',\n                                            value: metadata,\n                                        },\n                                    }\n                                );\n                            } catch (e) {\n                                console.log(\"Failed to upload\")\n                                dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: \"Upload busy. Please try again.\",\n                                        },\n                                    });\n                                return;     \n                            }\n                            console.log(metadata.url);\n                            console.log(metadata.data.image.href);\n                            const token_uri = metadata.url;\n\n                            // Connect to metamask and create nft\n                            try {\n                                // mint new nft\n                                const txn = await contract.connect(provider.getSigner(0)).mintOne(\n                                    address, token_uri, { value: ethers.utils.parseEther(\"10.0\") });\n                                const receipt = await txn.wait();\n                                console.log(receipt.events);\n                                \n                                const mint = parseInt(await contract.current_supply());\n                                dispatch({\n                                    type: 'SET_VALUE',\n                                    payload: {\n                                        key: 'minted',\n                                        value: mint,\n                                    },\n                                });\n\n                                dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: \"\",\n                                        },\n                                    });\n                                dispatch(\n                                    {\n                                        type: 'SET_SUCCESS',\n                                        payload: {\n                                            value: `Successful Mint : ${hash}`,\n                                        },\n                                    });\n                            } catch (e) {\n                                console.log(e);\n                                try {\n                                    dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: e.data.message,\n                                        },\n                                    });        \n                                } catch (e2) {\n                                    console.log(e2);\n                                    dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: e.message,\n                                        },\n                                    });\n                                }\n    \n                            }\n                        }, \"image/jpg\", 1.0);\n                    }\n                        \n                    }>\n                    Mint NFT\n                </button>\n                <br />          \n            </div>\n            <div className=\"error-message\">\n                <label>{errorMessage}</label>\n            </div>\n            <div className=\"success-message\">\n                <label>{successMessage}</label>\n            </div>\n            <br />\n            <div className=\"info-message\">\n                <h5>Seed : {hash}</h5>\n            </div>\n            <div className=\"section section-content\">\n                {(\n                    <P5Wrapper\n                        id=\"p5wrap\"\n                        dispatch={dispatch}\n                        sketch={sketchJulia}\n                        state={{ hash, refresh}}\n                    />\n                )}\n            </div>\n            <div className=\"info-message\">\n                <h4>Mint Status : {minted} / 1000</h4>\n            </div>\n            <br />\n        </div>\n    )\n}\n\nexport default JuliaDisplay;","import React, { useContext, useEffect,  useState } from 'react';\nimport { ethers } from 'ethers';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider';\n\nexport default function About() {\n    const dispatch = useContext(AppDispatchContext);\n    const {\n        minted\n    } = useContext(AppStateContext);\n\n    // useEffect(async () => {\n    //     console.log(\"Contract\", contract);\n    //     if (contract !== undefined) {\n    //         const mint = parseInt(await contract.current_supply());\n    //         console.log(\"Minted\", mint);\n    //         //setMinted(mint);\n    //     } \n    // }, [contract]);\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <h2>How to mint</h2>\n                <ul>\n                    <li>Go to \"Mint\" tab</li>\n                    <li>Click 'Generate New' until you like the generated image</li>\n                    <li>Click 'Mint NFT'</li>\n                    <li>You will see a success message in green saying 'Successful Mint'</li>\n                    <li>If there's an error, you will see the details in red. Follow those instructions.</li>\n                    </ul>\n                <p>Have fun!!</p>\n                <br />\n                <h2>Julia NFT</h2>\n                <p>This is the first in a series of generative fractal NFTs that I have planned. There is a limit of 3 NFTs per address. Click on 'Generate New' until you find what you like, then click 'Mint'. You'll see a success message in green if the transaction goes through.</p>\n                    <ul>\n                    <li>Contract Address : 0xc45c766C9D0639654590F16486C936b97eCd714D</li>\n                    <li>Minted : {minted}/1000</li>\n                    <li>Price : 10 FTM</li>\n                    <li>Max mints per address : 3</li>\n                    </ul>\n                <p>The fractals are generated through a mix of Julia set and interesting number theoretic properties. The generation algorithm is fixed and the code will be committed in a transaction to the blockchain when the mints reach 100.</p>\n                <br />\n                <h2>About me</h2>\n                <p>Hello, I am Cthae. I am an independent artist and developer avidly learning about blockchain. The more I learn, the more I want to create something awesome. You can checkout my other projects as well </p>\n                <ul>\n                    <li><a href=\"https://modernalcibiades.github.io/RarityCaretakerDapp/\">Rarity Caretaker : Manage all Rarity Manifested summoners</a></li>\n                    <li><a href=\"https://github.com/modernAlcibiades/DragonPriestToken\">Dragon Priest : Take care of Lair of Wisdom dragons and earn community tokens</a></li>\n                </ul>\n            </div>\n        </>\n    )\n}\n","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #222;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 2rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #ffc107;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  margin-right: 24px;\n  max-width: 768px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;","import React, { useContext, useEffect,  useState } from 'react';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider'\nimport { ethers } from 'ethers';\n\nexport default function ConnectWallet() {\n    const dispatch = useContext(AppDispatchContext)\n    const {\n        address,\n        provider,\n        errorMessage\n    } = useContext(AppStateContext)\n    \n    const [buttonText, setButtonText] = useState(\"Connect Wallet\");\n    const ethereum = window.ethereum;\n\n    const clear_connect = () => {\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'provider',\n                value: undefined,\n            },\n        });\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'address',\n                value: undefined,\n            },\n        });\n        setButtonText(\"Connect Wallet\");\n    }\n    \n    const toggle_connect = async () => {\n        // Connect wallet\n        console.log(address);\n        console.log(provider);\n        if (address === undefined || provider === undefined) {\n            try {\n                const ethereum = window.ethereum;\n\n                if (ethereum.networkVersion === '250') {\n                    const provider = new ethers.providers.Web3Provider(ethereum);\n                    const [signer_address] = await ethereum.request({ method: 'eth_requestAccounts' });\n\n                    dispatch({\n                        type: 'SET_VALUE',\n                        payload: {\n                            key: 'provider',\n                            value: provider,\n                        },\n                    });\n                    dispatch({\n                        type: 'SET_VALUE',\n                        payload: {\n                            key: 'address',\n                            value: signer_address,\n                        },\n                    });\n                    setButtonText(signer_address.substring(0, 22) + '...');\n                    dispatch(\n                        {\n                            type: 'SET_SUCCESS',\n                            payload: {\n                                value: \"\",\n                            },\n                        });\n                    return;\n                } else {\n                    console.log(\"Wrong network! Connect to fantom\")\n                    dispatch(\n                        {\n                            type: 'SET_ERROR',\n                            payload: {\n                                value: \"Connect to Fantom Network on Metamask!!!\",\n                            },\n                        });\n                }\n            } catch (e) {\n                console.log(e);\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: { value: e.data.message },\n                });\n            }\n        }\n        // If not returned yet, clear info\n        clear_connect();\n    }\n\n        \n    useEffect(async () => {\n        // on account change\n        ethereum.on(\"accountsChanged\", ([newAddress]) => {\n            console.log(\"Change account\", newAddress);\n            dispatch({\n                type: 'SET_VALUE',\n                payload: {\n                    key: 'address',\n                    value: newAddress,\n                },\n            });\n            setButtonText(newAddress.substring(0, 22) + '...');\n        });\n        \n\n        // on chain change\n        ethereum.on('chainChanged', (chainId) => {\n            console.log(\"Chain Changed\", chainId);\n            if (chainId === '0xfa') {\n                dispatch({\n                    type: \"SET_ERROR\",\n                    payload:\"\"\n                })\n            }\n            clear_connect();\n        });\n    }, [ethereum]);\n\n    return (\n        <div className=\"connect-wrapper\">\n            <button\n                className=\"btn btn-warning\"\n                type=\"button\"\n                onClick={async () => {\n                    await toggle_connect();\n                }}\n            >\n                {buttonText}\n            </button>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn\n} from './NavbarElements';\n\nimport ConnectWallet from '../ConnectWallet';\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        \n        <div className=\"logo\">\n          <NavLink to='/'>\n              <h1>Julia</h1>\n          </NavLink>\n        </div>\n\n        <Bars />\n        <NavMenu>\n          <NavLink to='/about' activeStyle>\n            About\n          </NavLink>\n          <NavLink to='/mint' activeStyle>\n            Mint NFT\n          </NavLink>\n          <NavLink to='/dashboard' activeStyle>\n            My Dashboard\n          </NavLink>\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        \n          <NavBtn>\n            <ConnectWallet/>\n          </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <>\n            <div className=\"wrapper\">\n                <h2>Coming soon</h2>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport JuliaDisplay from '../JuliaDisplay';\nimport About from \"../About\";\nimport Navbar from \"../Navbar\";\nimport Dashboard from \"../Dashboard\";\n\nexport default function AppContent() {\n    const prefix = '/'\n    return (\n        <>\n            <div className=\"app-content\">\n                <Router >\n                    <Navbar />\n                    <Switch>\n                        <Route path={prefix} exact component={JuliaDisplay} />\n                        <Route path={prefix + 'about'} component={About} />\n                        <Route path={prefix + 'mint'} component={JuliaDisplay} />\n                        <Route path={prefix + 'dashboard'} component={Dashboard} />\n                    </Switch>\n                </Router>\n            </div>\n        </>\n    )\n}\n// {\n//                     <div className=\"title\">\n//                     <h1>Julia</h1>\n//                     <hr width=\"30%\" color=\"grey\" />\n//                 </div>\n//                 <JuliaDisplay />\n//                 <About />\n// }\n","import React from 'react'\nimport { hot } from 'react-hot-loader'\n\nimport AppContent from '../AppContent'\n\nimport AppStateProvider from './AppStateProvider'\n\nimport './style.css'\n\nfunction App() {\n    return (\n        <AppStateProvider>\n            <AppContent />\n        </AppStateProvider>\n    )\n}\n\nexport default module.hot ? hot(module)(App) : App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport App from './components/App'\n\nrender(<App />, window.document.querySelector('#app-root'))\n"],"sourceRoot":""}