{"version":3,"sources":["webpack:///./src/config.js","webpack:///./src/sketches/sketch-julia.js","webpack:///./src/components/App/AppStateProvider/init-state.js","webpack:///./src/components/App/AppStateProvider/reducer.js","webpack:///./src/components/App/AppStateProvider/index.jsx","webpack:///./src/components/P5Wrapper/index.jsx","webpack:///./src/components/JuliaDisplay/index.jsx","webpack:///./src/components/About/index.jsx","webpack:///./src/components/Navbar/NavbarElements.js","webpack:///./src/components/ConnectWallet/index.jsx","webpack:///./src/components/Navbar/index.jsx","webpack:///./src/components/Dashboard/index.jsx","webpack:///./src/components/AppContent/index.jsx","webpack:///./src/components/App/index.jsx","webpack:///./src/index.jsx"],"names":["module","exports","apikey","s","thresh","maxitr","xmin","xmax","ymin","ymax","r","theta","c1","c2","c3","c4","state","dispatch","ms","ss","vs","minval","maxval","shiftcolor","pattern","vals","iterate_julia","a","b","i","fa","setup","dim","Math","floor","window","innerWidth","innerHeight","createCanvas","draw","refresh","hash","assert","length","val","get_int","k","parseInt","substring","map","PI","cos","sin","pow","x","y","gcd","base","m","push","resetImage","pixelDensity","loadPixels","width","j","height","pix","grad","cols","pixels","updatePixels","type","payload","key","value","canvas","address","undefined","provider","balance","ns_client","NFTStorage","token","metadata","contract_address","contract","minted","FTMSCAN_API_KEY","bgndColor","errorMessage","successMessage","AppDispatchContext","createContext","AppStateContext","initState","AppStateProvider","children","useReducer","reducer","Provider","propTypes","PropTypes","any","isRequired","P5Wrapper","id","generate","sketch","console","log","sketchContainer","useRef","useEffect","p5","current","remove","ref","className","object","func","defaultProps","memo","_","nextProps","p5Wrapper","JuliaDisplay","useContext","blobd","redraw","_hash","random","toString","cnt","ethers","Contract","Julia","abi","current_supply","mint","onClick","toBlob","blob","store","name","seed","description","image","url","data","href","token_uri","connect","getSigner","mintOne","utils","parseEther","txn","wait","receipt","events","message","e2","sketchJulia","About","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","ConnectWallet","useState","buttonText","setButtonText","ethereum","clear_connect","toggle_connect","networkVersion","providers","Web3Provider","request","method","signer_address","on","newAddress","chainId","Navbar","to","Dashboard","AppContent","path","exact","component","prefix","render","document","querySelector"],"mappings":"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","file":"main.7cb4.js","sourcesContent":["module.exports = {\n    apikey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGM5NUU2MmZEMzgyZjUwN0VhRUM3OURDNkU4MzRGODM3RjM0NDJEMTgiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzMjc1ODc4NzYwNywibmFtZSI6IkZhbnRvbUdlbmVyYXRpdmVBcnQifQ.9PVwHw6GZ3cTYtnANqnD3P4X9F9tcKIJk2KbnUwEuw8\"\n}","import { assert } from \"chai\";\n\nexport default function (s) {\n    s.state = {}\n    s.dispatch = () => { }\n\n    // Variables\n    let thresh, maxitr;\n    let xmin, xmax, ymin, ymax;\n    let r, theta, c1, c2, c3, c4;\n    let vals = [-1.2, 1.2, -1.2, 1.2];\n    let ms, ss, vs;\n    let minval, maxval;\n    let shiftcolor, pattern;\n\n    // functions\n    let iterate_julia = (a, b)=> {\n        let i = 0;\n        while (i < maxitr) {\n            const fa = a * a - b * b + c1;\n            b = 2 * a * b + c2;\n            a = fa;\n            i += 1;\n            if (a * a + b * b > thresh) {\n                return i;\n            }\n            i++;\n        }\n    }\n\n    let gcd = (a, b) => {\n        if (a <= 1 || b <= 1) {\n            return 1;\n        } else if (a % b == 0) {\n            return b;\n        } else return gcd(b, a % b);\n    }\n    \n    let resetImage = () => {\n        const { hash } = s.state;\n        // Use 18 nibbles of information to generate\n        // parameter will denote nibbles needed\n        assert(hash.length > 18);\n        // variables\n        minval = 255;\n        maxval = 0;\n\n        // parameters\n        let i = 2;\n        let val = 0;\n\n        let get_int = (k) => {\n            val = parseInt('0x' + hash.substring(i, i + k));\n            i += k;\n        }\n        // Indices of parameters\n        // 0 : r (1)\n        // 1-2 : theta (2)\n        get_int(1);\n        r = 0.7855 + s.map(val, 0, 16, -0.1, + 0.1);\n        get_int(2);\n        theta = s.map(val, 0, 256, 0, 2*s.PI);\n        c1 = r * s.cos(theta);\n        c2 = r * s.sin(theta);\n\n        // 3, 4 : Control options to select algorithm\n        get_int(1);\n        //maxitr = s.map(val, 0, 256, 8, 10000);\n        maxitr = Math.pow(2, (val + 8) / 2);\n        get_int(1);\n        thresh = Math.pow(2, (val + 6) / 2);; //Math.pow(2, val+4);\n\n        // 5 : Pattern, Invert colors\n        get_int(1);\n        if (val % 4 === 0) {\n            pattern = (x, y) => {\n                return x * x + y * y;\n            }\n        } else if (val %4 == 1) {\n            pattern = (x, y) => {\n                return x * y * val;\n            }\n        } else if (val % 4 == 2) {\n            pattern = (x, y) => {\n                return gcd(x, y)*val;\n            }\n        } else if (val % 4 == 3) {\n            pattern = (x, y) => {\n                return (x^y);\n            }\n        }\n        val = Math.floor(val / 4);\n        // 25% chance of inversion\n        if (val === 0) {\n            // Inverted\n            shiftcolor = (x) => {\n                return s.map(x, minval, maxval, 255, 0);\n            }\n        } else {\n            shiftcolor = (x) => {\n                return s.map(x, minval, maxval, 0, 255);\n            }\n        }\n\n\n        // 6 : Select x, y ranges\n        get_int(1);\n        xmin = vals[0] - s.map(val, 0, 256, 0, 0.5);\n        xmax = vals[1] + s.map(val, 0, 256, 0, 0.5);\n        ymin = vals[2] - s.map(val, 0, 256, 0, 0.5);\n        ymax = vals[3] + s.map(val, 0, 256, 0, 0.5);\n\n        // 7-8 : base\n        // 9-10, 11-12, 13-14 : r, g, b params\n        ms = [];\n        ss = [];\n        vs = [];\n        get_int(2);\n        const base = val;\n        for (let k = 0; k < 3; k++) {\n            get_int(2);\n            const m = val;\n            ms.push(m > base ? base : m);\n        }\n        //15, 16, 17 : ms, vs\n        for (let k = 0; k < 3; k++) {\n            get_int(1);\n            ss.push(val % 2);\n            vs.push(s.map(val/2, 0, 8, 0, 1));\n        }\n    };\n\n    s.setup = () => {\n        const dim = Math.floor((window.innerWidth > window.innerHeight ? window.innerHeight : window.innerWidth) * 0.8);\n\n        s.createCanvas(dim, dim);\n    }\n\n    s.draw = () => {\n        if (s.state.refresh) {\n            resetImage();\n            s.pixelDensity(1);\n            s.loadPixels();\n\n            for (let i = 0; i < s.width; i++) {\n                for (let j = 0; j < s.height; j++) {\n                    let pix = (i + j * s.width) * 4;\n                    c3 = s.map(i, 0, s.height, xmin, xmax);\n                    c4 = s.map(j, 0, s.width, ymin, ymax);\n                    let grad = iterate_julia(c3, c4);\n                    let val = s.map(grad, 0, maxitr, 0, 256);\n                    // Calculate Julia\n                    let cols = (maxitr - grad) * pattern(i, j);\n                    for (let k = 0; k < 3; k++) {\n                        s.pixels[pix + k] = val + s.map((ss[k] * cols) % ms[k], 0, ms[k], 0, 255);\n                        if (s.pixels[pix + k] > maxval) maxval = s.pixels[pix + k];\n                        if (s.pixels[pix + k] < minval) minval = s.pixels[pix + k];\n                    }\n                    s.pixels[pix + 3] = 255;\n                }\n            }\n            // Normalize\n            for (let i = 0; i < s.width; i++) {\n                for (let j = 0; j < s.height; j++) {\n                    let pix = (i + j * s.width) * 4;\n                    for (let k = 0; k < 3; k++) {\n                        s.pixels[pix + k] = shiftcolor(s.pixels[pix + k]);\n                    }\n                }\n            }\n            s.updatePixels();\n            s.dispatch(\n                {\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'refresh',\n                        value: false,\n                    },\n                }\n            );\n            s.dispatch(\n                {\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'blobd',\n                        value: s.canvas,\n                    },\n                }\n            );\n        }\n        \n    }\n}\n","import { NFTStorage } from 'nft.storage';\nimport { apikey } from \"../../../config.js\";\nexport default {\n    // wallet\n    address: undefined,\n    provider: undefined,\n    balance: 0,\n\n    // ipfs\n    ns_client: new NFTStorage({ token: apikey}),\n    canvas: undefined,\n    metadata: undefined,\n    \n    // contract\n    contract_address: \"0x60059E9a55b52A5EEA01A37A0a78c05806d9DFD9\",\n    contract: undefined,\n    minted: '--',\n    FTMSCAN_API_KEY: undefined,\n    \n    // Generator\n    refresh: true,\n    hash: '0x8c4a76cf4a66c6ab0d6ce34a49a6a482',\n    bgndColor: '#ddd',\n    // playAudio: false,\n    errorMessage: \"\",\n    successMessage: \"\"\n}\n","export default function (state, { type, payload }) {\n    switch (type) {\n        \n        case 'SET_VALUE':\n            return {\n                ...state,\n                [payload.key]: payload.value,\n            }\n        case 'SET_ERROR':\n            return {\n                ...state,\n                'errorMessage': payload.value,\n                'successMessage': \"\"\n\n            }\n        case 'SET_SUCCESS':\n            return {\n                ...state,\n                \"successMessage\": payload.value,\n                \"errorMessage\": \"\"\n            }\n        \n        default:\n            return state\n    }\n}\n","import React, { createContext, useReducer } from 'react'\nimport PropTypes from 'prop-types'\n\nimport initState from './init-state'\nimport reducer from './reducer'\n\nexport const AppDispatchContext = createContext(() => { })\nexport const AppStateContext = createContext(initState)\n\nfunction AppStateProvider({ children }) {\n    const [state, dispatch] = useReducer(reducer, initState)\n\n    return (\n        <AppDispatchContext.Provider value={dispatch}>\n            <AppStateContext.Provider value={state}>\n                {children}\n            </AppStateContext.Provider>\n        </AppDispatchContext.Provider>\n    )\n}\n\nAppStateProvider.propTypes = {\n    children: PropTypes.any.isRequired,\n}\n\nexport default AppStateProvider\n","import React, { memo, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { generate } from 'shortid'\n\nexport default function (id = generate()) {\n    let canvas = null\n\n    function P5Wrapper({\n        sketch = () => { },\n        state = { },\n        dispatch = () => { },\n    }) {\n        console.log(`::: P5Wrapper(${id}) component has been re-rendered`)\n\n        const sketchContainer = useRef(null)\n\n        useEffect(() => {\n            console.log(`::: P5Wrapper(${id})/useEffect()`)\n            canvas = new window.p5(sketch, sketchContainer.current)\n            canvas.state = state\n            canvas.dispatch = dispatch\n\n            dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'blobd',\n                        value: canvas.canvas,\n                    },\n                });\n\n            return () => {\n                console.log(`::: P5Wrapper(${id})/useEffect.return()`)\n                canvas.remove()\n            }\n        }, [dispatch, sketch, state])\n\n        return (\n            <div ref={sketchContainer} className=\"p5wrapper\">\n                \n            </div>\n        )\n        //<h5>{`P5Wrapper #${id}`}</h5>\n    }\n\n    P5Wrapper.propTypes = {\n        state: PropTypes.object,\n\n        dispatch: PropTypes.func,\n        sketch: PropTypes.func,\n    }\n\n    P5Wrapper.defaultProps = {\n        state: {},\n\n        dispatch: () => { },\n        sketch: () => { },\n    }\n\n    return memo(P5Wrapper, (_, nextProps) => {\n        canvas.state = { ...nextProps.state }\n\n        return true\n    })\n}\n","import React, { useContext, useEffect } from 'react'\n\nimport { generate } from 'shortid';\n\nimport sketchJulia from '../../sketches/sketch-julia';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider';\nimport p5Wrapper from '../P5Wrapper';\n\n// contract\nimport Julia from '../../contracts/FractalArt.sol/Julia.json';\nimport { ethers } from 'ethers';\n\nconst P5Wrapper = p5Wrapper(generate())\n\nconst JuliaDisplay =()=> {\n    const dispatch = useContext(AppDispatchContext)\n    const {\n        contract,\n        contract_address,\n        address,\n        provider,\n        ns_client,\n        blobd,\n        refresh,\n        hash,\n        errorMessage,\n        successMessage,\n        minted\n    } = useContext(AppStateContext)\n\n    const redraw = () => {\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'refresh',\n                value: true,\n            },\n        });\n        let _hash = '0x';\n        for (let i = 0; i < 18; i++) {\n            const val = Math.floor(Math.random() * 16);\n            _hash = _hash + val.toString(16);\n        }\n        console.log(\"Seed\", _hash);\n        \n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'hash',\n                value: _hash,\n            },\n        });\n    }\n\n    useEffect(() => {\n        // Clear Canvas\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'blobd',\n                value: undefined,\n            },\n        });\n\n        // Redraw on canvas\n        redraw();\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n            // Initialize contract\n            if (provider !== undefined) {\n                const cnt = new ethers.Contract(\n                    contract_address,\n                    Julia.abi,\n                    provider);\n            \n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'contract',\n                        value: cnt,\n                    },\n                });\n        \n                const mint = parseInt(await cnt.current_supply());\n                console.log(\"Minted\", mint);\n\n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'minted',\n                        value: mint,\n                    },\n                });\n            } else {\n                dispatch({\n                    type: 'SET_VALUE',\n                    payload: {\n                        key: 'contract',\n                        value: undefined,\n                    },\n                });\n            }\n        })();\n    }, [provider]);\n\n    return (\n        <div className=\"mint-wrapper\">\n            <div className=\"inputs-wrapper\">\n                <button\n                    className=\"btn btn-warning\"\n                    type=\"button\"\n                    onClick={() => {\n                        redraw();\n                    } }>\n                    Generate New\n                </button>\n                <span></span>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={async () => {\n                        if (provider === undefined || address === undefined ) {\n                            dispatch(\n                                {\n                                    type: 'SET_ERROR',\n                                    payload: {\n                                        value: \"Please connect your wallet before minting\",\n                                    },\n                                });\n                            return;\n                        }\n\n                        const bl = await blobd.toBlob(async function (blob) {// get content as blob\n                            dispatch(\n                                {\n                                    type: 'SET_SUCCESS',\n                                    payload: {\n                                        value: `Minting. Please wait...`,\n                                    },\n                                });\n                            let metadata;\n                            try {\n                                metadata = await ns_client.store({\n                                    name: `Julia`,\n                                    seed: `${hash}`,\n                                    description: `julia_${hash}`,\n                                    image: blob\n                                });\n                                dispatch(\n                                    {\n                                        type: 'SET_VALUE',\n                                        payload: {\n                                            key: 'metadata',\n                                            value: metadata,\n                                        },\n                                    }\n                                );\n                            } catch (e) {\n                                console.log(\"Failed to upload\")\n                                dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: \"Upload busy. Please try again.\",\n                                        },\n                                    });\n                                return;     \n                            }\n                            console.log(metadata.url);\n                            console.log(metadata.data.image.href);\n                            const token_uri = metadata.url;\n\n                            // Connect to metamask and create nft\n                            try {\n                                // mint new nft\n                                const txn = await contract.connect(provider.getSigner(0)).mintOne(\n                                    address, hash, token_uri, { value: ethers.utils.parseEther(\"10.0\") });\n                                const receipt = await txn.wait();\n                                console.log(receipt.events);\n                                \n                                const mint = parseInt(await contract.current_supply());\n                                dispatch({\n                                    type: 'SET_VALUE',\n                                    payload: {\n                                        key: 'minted',\n                                        value: mint,\n                                    },\n                                });\n\n                                dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: \"\",\n                                        },\n                                    });\n                                dispatch(\n                                    {\n                                        type: 'SET_SUCCESS',\n                                        payload: {\n                                            value: `Successful Mint : ${hash}`,\n                                        },\n                                    });\n                            } catch (e) {\n                                console.log(e);\n                                try {\n                                    dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: e.data.message,\n                                        },\n                                    });        \n                                } catch (e2) {\n                                    console.log(e2);\n                                    dispatch(\n                                    {\n                                        type: 'SET_ERROR',\n                                        payload: {\n                                            value: e.message,\n                                        },\n                                    });\n                                }\n    \n                            }\n                        }, \"image/jpg\", 1.0);\n                    }\n                        \n                    }>\n                    Mint NFT\n                </button>\n                <br />          \n            </div>\n            <div className=\"error-message\">\n                <label>{errorMessage}</label>\n            </div>\n            <div className=\"success-message\">\n                <label>{successMessage}</label>\n            </div>\n            <br />\n            <div className=\"info-message\">\n                <h5>Seed : {hash}</h5>\n            </div>\n            <div className=\"section section-content\">\n                {(\n                    <P5Wrapper\n                        id=\"p5wrap\"\n                        dispatch={dispatch}\n                        sketch={sketchJulia}\n                        state={{ hash, refresh}}\n                    />\n                )}\n            </div>\n            <div className=\"info-message\">\n                <h4>Mint Status : {minted} / 1000</h4>\n            </div>\n            <br />\n        </div>\n    )\n}\n\nexport default JuliaDisplay;","import React, { useContext } from 'react';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider';\n\nexport default function About() {\n    const dispatch = useContext(AppDispatchContext);\n    const {\n        contract_address,\n        minted\n    } = useContext(AppStateContext);\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <h2>Julia NFT</h2>\n                <p>This is the first in a series of generative fractal NFTs that I have planned. As the artist, I wish for the community to participate in completing the work. On the website, you can generate random samples until you find one that you like. You have limited number of mints - 3 per address, so you will be the one deciding which pieces actually go on the chain. I look forward to seeing the final 1000 pieces.</p>\n                <p>The project is named after the Julia set of fractals, which is one of the key components. Using 9 bytes of randomness, the NFT is generated completely on chain, which is still more than 100 billion billion pieces so you can use any 9 bytes seed and get unique art. You can use a seed upto 32 bytes, but the bytes beyond the most significant 9 will be ignored. </p>\n                <p>Details are as follows:</p>\n                    <ul>\n                    <li>Contract Address : <a href={\"https://ftmscan.com/address/\"+ contract_address}>{contract_address}</a></li>\n                    <li>Minted : {minted}/1000</li>\n                    <li>Price : 10 FTM</li>\n                    <li>Max mints per address : 3</li>\n                    </ul>\n                <br />\n                <h2>How to mint</h2>\n                <ul>\n                    <li>Go to \"Mint\" tab</li>\n                    <li>Click 'Generate New' until you like the generated image</li>\n                    <li>Click 'Mint NFT'</li>\n                    <li>You will see a success message in green saying 'Successful Mint'</li>\n                    <li>If there's an error, you will see the details in red. Follow those instructions.</li>\n                    </ul>\n                <p>Have fun!!</p>\n                <br />\n                <h2>About me</h2>\n                <p>Hello, I am Cthae. I am an independent artist and developer. The more I learn, the more I want to create something awesome. Julia is one such attempt. You can checkout my other projects as well </p>\n                <ul>\n                    <li><a href=\"https://modernalcibiades.github.io/RarityCaretakerDapp/\">Rarity Caretaker : Manage all Rarity Manifested summoners</a></li>\n                    <li><a href=\"https://github.com/modernAlcibiades/DragonPriestToken\">Dragon Priest : Take care of Lair of Wisdom dragons and earn community tokens</a></li>\n                </ul>\n            </div>\n        </>\n    )\n}\n","import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #222;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 2rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: #ffc107;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* Second Nav */\n  /* margin-right: 24px; */\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  margin-right: 24px;\n  max-width: 768px;\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;","import React, { useContext, useEffect,  useState } from 'react';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider'\nimport { ethers } from 'ethers';\n\nexport default function ConnectWallet() {\n    const dispatch = useContext(AppDispatchContext)\n    const {\n        address,\n        provider,\n        errorMessage\n    } = useContext(AppStateContext)\n    \n    const [buttonText, setButtonText] = useState(\"Connect Wallet\");\n    const ethereum = window.ethereum;\n\n    const clear_connect = () => {\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'provider',\n                value: undefined,\n            },\n        });\n        dispatch({\n            type: 'SET_VALUE',\n            payload: {\n                key: 'address',\n                value: undefined,\n            },\n        });\n        setButtonText(\"Connect Wallet\");\n    }\n    \n    const toggle_connect = async () => {\n        // Connect wallet\n        if (address === undefined || provider === undefined) {\n            try {\n                const ethereum = window.ethereum;\n\n                if (ethereum.networkVersion === '250') {\n                    const provider = new ethers.providers.Web3Provider(ethereum);\n                    const [signer_address] = await ethereum.request({ method: 'eth_requestAccounts' });\n\n                    dispatch({\n                        type: 'SET_VALUE',\n                        payload: {\n                            key: 'provider',\n                            value: provider,\n                        },\n                    });\n                    dispatch({\n                        type: 'SET_VALUE',\n                        payload: {\n                            key: 'address',\n                            value: signer_address,\n                        },\n                    });\n                    setButtonText(signer_address.substring(0, 22) + '...');\n                    dispatch(\n                        {\n                            type: 'SET_SUCCESS',\n                            payload: {\n                                value: \"\",\n                            },\n                        });\n                    return;\n                } else {\n                    console.log(\"Wrong network! Connect to fantom\")\n                    dispatch(\n                        {\n                            type: 'SET_ERROR',\n                            payload: {\n                                value: \"Connect to Fantom Network on Metamask!!!\",\n                            },\n                        });\n                }\n            } catch (e) {\n                console.log(e);\n                dispatch({\n                    type: 'SET_ERROR',\n                    payload: { value: e.data.message },\n                });\n            }\n        }\n        // If not returned yet, clear info\n        clear_connect();\n    }\n\n        \n    useEffect(async () => {\n        // on account change\n        ethereum.on(\"accountsChanged\", ([newAddress]) => {\n            console.log(\"Change account\", newAddress);\n            dispatch({\n                type: 'SET_VALUE',\n                payload: {\n                    key: 'address',\n                    value: newAddress,\n                },\n            });\n            setButtonText(newAddress.substring(0, 22) + '...');\n        });\n        \n\n        // on chain change\n        ethereum.on('chainChanged', (chainId) => {\n            console.log(\"Chain Changed\", chainId);\n            if (chainId === '0xfa') {\n                dispatch({\n                    type: \"SET_ERROR\",\n                    payload:\"\"\n                })\n            }\n            clear_connect();\n        });\n    }, [ethereum]);\n\n    return (\n        <div className=\"connect-wrapper\">\n            <button\n                className=\"btn btn-warning\"\n                type=\"button\"\n                onClick={async () => {\n                    await toggle_connect();\n                }}\n            >\n                {buttonText}\n            </button>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn\n} from './NavbarElements';\n\nimport ConnectWallet from '../ConnectWallet';\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        \n        <div className=\"logo\">\n          <NavLink to='/'>\n              <h1>Julia</h1>\n          </NavLink>\n        </div>\n\n        <Bars />\n        <NavMenu>\n          <NavLink to='/about'>\n            About\n          </NavLink>\n          <NavLink to='/mint'>\n            Mint NFT\n          </NavLink>\n          <NavLink to='/dashboard'>\n            My Dashboard\n          </NavLink>\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        \n          <NavBtn>\n            <ConnectWallet/>\n          </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useContext } from 'react';\n\nimport { AppDispatchContext, AppStateContext } from '../App/AppStateProvider';\n\nexport default function Dashboard() {\n    const {\n        address\n    } = useContext(AppStateContext);\n    if (address === undefined) {\n        return (\n            <>\n                <div className=\"wrapper\">\n                    <h2>Julia NFT Gallery</h2>\n                    <div className=\"error-message\">\n                        <label>Connect wallet</label>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"wrapper\">\n                    <h2>Julia NFT Gallery</h2>\n                    <div className=\"info-message\">\n                        <label>Wallet address : {address}</label>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport JuliaDisplay from '../JuliaDisplay';\nimport About from \"../About\";\nimport Navbar from \"../Navbar\";\nimport Dashboard from \"../Dashboard\";\n\nexport default function AppContent() {\n    const prefix = '/'\n    return (\n        <>\n            <div className=\"app-content\">\n                <Router >\n                    <Navbar />\n                    <Switch>\n                        <Route path={prefix} exact component={JuliaDisplay} />\n                        <Route path={prefix + 'about'} component={About} />\n                        <Route path={prefix + 'mint'} component={JuliaDisplay} />\n                        <Route path={prefix + 'dashboard'} component={Dashboard} />\n                    </Switch>\n                </Router>\n            </div>\n        </>\n    )\n}\n// {\n//                     <div className=\"title\">\n//                     <h1>Julia</h1>\n//                     <hr width=\"30%\" color=\"grey\" />\n//                 </div>\n//                 <JuliaDisplay />\n//                 <About />\n// }\n","import React from 'react'\nimport { hot } from 'react-hot-loader'\n\nimport AppContent from '../AppContent'\n\nimport AppStateProvider from './AppStateProvider'\n\nimport './style.css'\n\nfunction App() {\n    return (\n        <AppStateProvider>\n            <AppContent />\n        </AppStateProvider>\n    )\n}\n\nexport default module.hot ? hot(module)(App) : App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport App from './components/App'\n\nrender(<App />, window.document.querySelector('#app-root'))\n"],"sourceRoot":""}